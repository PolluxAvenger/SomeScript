# coding=utf-8

import os
import re
import bs4
import datetime
import requests
import urllib.request

file_list = []
dict_list = []
delete_list = ['<a href="?C=N;O=D">Name</a>', '<a href="?C=M;O=A">Last modified</a>',
               '<a href="?C=S;O=A">Size</a>', '<a href="?C=D;O=A">Description</a>',
               '<a href="/">Parent Directory</a>']


def download_file(url, local_filename):
    r = requests.get(url, stream=True)

    with open(local_filename, 'wb') as f:
        f.write(r.content)

    return local_filename


def isnotfile(urlname):
    # 如果返回的是-1，即没找到为目录
    back_name = urlname.split('/')[-1]
    if back_name == '':
        return 0
    else:
        return 1


def download_loop(url):
    content = urllib.request.urlopen(url)
    result = bs4.BeautifulSoup(content, "html.parser")
    strline = []
    link = result.find_all('a')
    # 找到全部a标签
    for line in link:
        strline.append(str(line))
    org_list = strline
    last_list = [x for x in org_list if x not in delete_list]
    # 把黑名单洗掉
    for line in last_list:
        if 'Parent Directory' in line:
            last_list.remove(line)
            break
    # 单独处理递归进的父目录链接
    strline.clear()
    for correspond in last_list:
        regular = re.compile('<a href="(.*)">(.*)</a>')
        strline.append(regular.split(correspond, 2))
    # 目录和名字进行分割
    for over_repeat in strline:
        last_url = str(content.url + over_repeat[1])

        if isnotfile(over_repeat[1]):
            newdir = os.path.join(os.getcwd(), 'malware_domain', over_repeat[2])
            os.makedirs(os.path.dirname(newdir), exist_ok=True)
            path_exist = os.path.exists(newdir)
            if path_exist:
                print(over_repeat[2] + "已经存在，跳过下载")
            else:
                print('这里应该启动对' + over_repeat[2] + '的下载！')
                file_name = os.path.join(os.path.dirname(newdir),
                                         str(datetime.date.today()) + '_' + os.path.basename(newdir))
                #print(file_name)
                local_name = download_file(last_url, file_name)
                print('已下载文件：' + local_name)

            file_list.append(over_repeat[2])
        else:
            print('这里是' + content.url + '下的' + over_repeat[2])

            if last_url not in dict_list:
                dict_list.append(last_url)

            newdir = os.path.join(os.getcwd(), 'malware', over_repeat[2])
            path_exist = os.path.exists(newdir)

            if not path_exist:
                # print('准备新建的目录名为：' + newdir)
                os.makedirs(newdir)

            os.chdir(newdir)
            download_loop(str(content.url + over_repeat[1]))
            os.chdir(os.path.abspath(".."))


if __name__ == '__main__':
    download_loop('http://www.malware-domains.com/files/')
    print('-------------下载完成，启动分析-------------')
